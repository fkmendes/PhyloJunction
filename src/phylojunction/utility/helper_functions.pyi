from collections import defaultdict
import typing as ty

def print_progress(idx: int, iterator_len: int) -> None: ...
def create_str_defaultdict() -> defaultdict: ...
def autovivify(levels: int = ..., final=...) -> ty.DefaultDict: ...
def check_and_vectorize_if_must(param_list: ty.Union[int, float, str, ty.List[ty.Union[int, float, str]]], dn_name: str, size_to_grow: int = 1) -> ty.List[ty.List[ty.Union[int, float, str]]]: ...
def get_ellapsed_time_in_minutes(start: float, end: float) -> int: ...
def symmetric_difference(set1: ty.Set[ty.Any], set2: ty.Set[ty.Any]) -> ty.Set[ty.Any]: ...