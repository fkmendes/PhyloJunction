import phylojunction.pgm.pgm as pgm
import typing as ty

class PJDnGrammar:
    dn_grammar_dict: ty.Dict[str, ty.Tuple[str, ...]]
    def __init__(self) -> None: ...
    @classmethod
    def grammar_check(cls, dn_id: str, dn_param: str) -> bool: ...
    @classmethod
    def init_return_parametric_dn(cls, dn_id: str, dn_param_dict: ty.Dict[str, ty.List[ty.Union[str, pgm.NodeDAG]]]) -> pgm.DistrForSampling: ...
    @classmethod
    def init_return_discrete_SSE_dn(cls, dn_param_dict: ty.Dict[str, ty.List[ty.Union[str, pgm.NodeDAG]]]) -> pgm.DistrForSampling: ...
    @classmethod
    def create_dn_obj(cls, dn_id: str, dn_param_dict: ty.Dict[str, ty.List[ty.Union[str, pgm.NodeDAG]]]) -> pgm.DistrForSampling: ...
